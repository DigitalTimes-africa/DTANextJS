# Generated by Django 4.2.1 on 2023-06-19 23:15

import datetime
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import streams.blocks
import wagtail.fields


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0005_auto_20220424_2025'),
        ('wagtailcore', '0083_workflowcontenttype'),
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
        ('home', '0003_eventsidebarbanner_newsadlowerbanner_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='NewsAuthorIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='NewsIndexPageTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='home.newsindexpage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NewsPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('image_description', models.TextField(blank=True, max_length=500, null=True)),
                ('date', models.DateTimeField(default=datetime.datetime.today, verbose_name='Post date')),
                ('blog_views', models.IntegerField(default=0)),
                ('content', wagtail.fields.StreamField([('full_richtext', streams.blocks.RichtextBlock())], help_text='Content of the news', null=True, use_json_field=True)),
                ('paragraph_2', wagtail.fields.StreamField([('full_richtext', streams.blocks.RichtextBlock())], help_text='Second paragraph of the news', null=True, use_json_field=True)),
                ('description', wagtail.fields.StreamField([('full_richtext', streams.blocks.RichtextBlock())], help_text='Description of the news', null=True, use_json_field=True)),
                ('news_source', models.CharField(blank=True, max_length=500, null=True)),
                ('guest_writer_name', models.CharField(blank=True, max_length=500, null=True)),
                ('blog_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='NewsPageTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='news_index_page_tags', to='home.newspage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NewsTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='news_index_page_tags', to='home.newsindexpage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NewsTagIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.RemoveField(
            model_name='eventsidebarbanner',
            name='event_image',
        ),
        migrations.RemoveField(
            model_name='newsadlowerbanner',
            name='ad_image',
        ),
        migrations.RemoveField(
            model_name='newsadlowerlongbanner',
            name='ad_image',
        ),
        migrations.RemoveField(
            model_name='newsadsidebarbanner',
            name='ad_image',
        ),
        migrations.RemoveField(
            model_name='newsnavadvert',
            name='ad_image',
        ),
        migrations.DeleteModel(
            name='SocialMediaStats',
        ),
        migrations.AlterModelOptions(
            name='newscategory',
            options={},
        ),
        migrations.RemoveField(
            model_name='newsauthor',
            name='id',
        ),
        migrations.AddField(
            model_name='newsauthor',
            name='page_ptr',
            field=models.OneToOneField(auto_created=True, default=1, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='newscategory',
            name='slug',
            field=models.SlugField(help_text="Enter the category slug (e.g. 'sports-news')", max_length=255, verbose_name='slug'),
        ),
        migrations.DeleteModel(
            name='EventSidebarBanner',
        ),
        migrations.DeleteModel(
            name='NewsAdLowerBanner',
        ),
        migrations.DeleteModel(
            name='NewsAdLowerLongBanner',
        ),
        migrations.DeleteModel(
            name='NewsAdSidebarBanner',
        ),
        migrations.DeleteModel(
            name='NewsNavAdvert',
        ),
        migrations.AddField(
            model_name='newspage',
            name='categories',
            field=modelcluster.fields.ParentalManyToManyField(to='home.newscategory'),
        ),
    ]
